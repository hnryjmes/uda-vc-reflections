How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Selects relevant information very quickly, without trying to make a guess as
    to what went wrong.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Allows you to try new things. Checks that you haven't previously tried to
    implement an idea and abandoned it. Basically gives the programmer an ideal
    memory.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros are that you have a tangible feeling that there are different versions
    of the same work. Cons are that you don't get fine-grained differences.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because in software files have dependencies that matter in a way that is not
    true of documents in Google Docs.

How can you use the commands git log and git diff to view the history of files?

    git log shows you all commits. git diff shows current changes that have not
    been staged yet.

How might using version control make you more confident to make changes that
could break something?

    Easy to undo changes!

Now that you have your workspace set up, what do you want to try using Git for?

    Debugging code?
